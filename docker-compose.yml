version: '3.8'

services:
  codegencd-app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/codegencd.db
      - CODEGEN_ORG_ID=${CODEGEN_ORG_ID:-323}
      - CODEGEN_API_TOKEN=${CODEGEN_API_TOKEN}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_WORKER_NAME=${CLOUDFLARE_WORKER_NAME:-webhook-gateway}
      - CLOUDFLARE_WORKER_URL=${CLOUDFLARE_WORKER_URL}
    volumes:
      - codegencd_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL database for production
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=codegencd
      - POSTGRES_USER=codegencd
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - postgres

  # Optional: Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis

volumes:
  codegencd_data:
  postgres_data:
  redis_data:
